#!/bin/bash

# Stop on any error
set -o errexit


##################################
#   cleanup_options()

cleanup_options() {

    info "Current function: ${FUNCNAME[1]}"

    echo -e "${yellow}
  Cleanup home directory?${no_color}
    " >&1
    echo -e "${yellow}  y)${white} Yes. This removes unused dotfiles.${no_color}" >&1
    echo -e "${yellow}  n)${white} No. Skip this step and leave all existing dotfiles as is.${no_color}" >&1
    echo
}

##################################
#   cleanup_home()

cleanup_home() {

    info "Current function: ${FUNCNAME[1]}" 

    # Array for common dotfiles.
    dotfiles=(
        ".bash_history" ".bash_logout" ".bash_profile" ".bashrc" \
        ".dircolors" ".dir_colors" ".gconf" ".gitconfig" ".kde" ".kde4" ".lesshst" \
        ".profile" ".vim" ".viminfo" ".vimrc" ".zlogin" ".zlogout" ".zprofile" \
        ".zshenv" ".zshrc" ".wget-hsts"
    )

    found=0 # Set to 1 if file found in the for loop.
    # Find any pre-esisting dotfiles.
    for file in "${dotfiles[@]}"; do
        if [ -e "${HOME}/${file}" ]; then
            found=1; break
        fi
    done

    # If true, offer to cleanup home directory.
    if [ "${found}" = 1 ]; then
        cleanup_options
        while [ -z "${cleanup_option}" ]; do
            echo -en "${white}  Option${yellow} [y/n]${white}: ${no_color}"
            read -r opt < /dev/tty
            echo
            case "${opt}" in
                [y]|[Y]*) cleanup_option=1 ;;
                [n]|[N]*) cleanup_option=2 ;;
                *) echo -e "Invalid option '${opt}'." >&2; cleanup_options ;;
            esac
        done

        if [ "${cleanup_option}" = 1 ]; then
            print_msg "Cleaning home directory..."
            # Cleanup user's home directory.
            for file in "${dotfiles[@]}"; do
                [ -e "${HOME}/${file}" ] && rm -ri "${HOME:?}/${file}"
            done
        fi
    fi
}

##################################
#   cleanup_tmp()

cleanup_tmp() {

    info "Current function: ${FUNCNAME[1]}"

    rm -rf "${temp_file}" "${temp_dir}"
}
