# .ssh/config
#
# permissions should be 600 to prevent abuse
#
# to validate your setup and see all the other (defaulted) values you can run: sshd -T

#######################################
# Global Configs
#
Ciphers aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com,chacha20-poly1305@openssh.com
UserKnownHostsFile ~/.ssh/known_hosts ~/.ssh/known-hosts/fingerprint


#######################################
# Manual Hosts
#
Host github.com
#        User git
	Hostname github.com
#        PreferredAuthentications publickey
    IdentityFile ~/.ssh/id_rsa_git

Host 192.*
	AddKeysToAgent yes
	# Specifies the timeout (in seconds) used when connecting to the SSH server, instead of using the default system TCP timeout.
	ConnectTimeout 0
	# Specifies whether to use compression. The argument must be yes or no (the default).
	Compression yes
	# Specifies whether the connection to the authentication agent (if any) will be forwarded to the remote machine. The argument may be yes, no (the default), an explicit path to an agent socket or the name of an environment variable (beginning with ‘$’) in which to find the path.
	ForwardAgent yes
	# Specifies a file from which the user's DSA, ECDSA, authenticator-hosted ECDSA, Ed25519, authenticator-hosted Ed25519 or RSA authentication identity is read.  You can also specify a public key file to use the corresponding private key that is loaded in ssh-agent(1) when the private key file is not present locally. The default is ~/.ssh/id_rsa, ~/.ssh/id_ecdsa, ~/.ssh/id_ecdsa_sk, ~/.ssh/id_ed25519, ~/.ssh/id_ed25519_sk and ~/.ssh/id_dsa
	IdentityFile ~/.ssh/id_rsa
	# Specifies the port number to connect on the remote host. The default is 22.
	Port 22
	# Sets a timeout interval in seconds after which if no data has been received from the server, ssh(1) will send a message through the encrypted channel to request a response from the server. The default is 0, indicating that these messages will not be sent to the server.
	ServerAliveInterval 60
	# If this flag is set to yes, ssh(1) will never automatically add host keys to the ~/.ssh/known_hosts file, and refuses to connect to hosts whose host key has changed. This provides maximum protection against man-in-the-middle (MITM) attacks, though it can be annoying when the /etc/ssh/ssh_known_hosts file is poorly maintained or when connections to new hosts are frequently made.  This option forces the user to manually add all new hosts.
	StrictHostKeyChecking no
	# Allow local command execution via the LocalCommand option or using the !command escape sequence in ssh(1). The argument must be yes or no (the default).
	PermitLocalCommand yes
	
	#LocalCommand scp ~/.{bashrc,bash_aliases,bash_functions,bash_logout,commonrc,dircolors,gitconfig,profile,zshrc} %r@%n:/export/home/%r # Specifies a command to execute on the local machine after successfully connecting to the server.
	RemoteCommand bash --rcfile "~/.bashrc" -i
